//////////////////////////////////////////////////////////////////////////
// 트랩 처리 Start                                                        //
//////////////////////////////////////////////////////////////////////////
- (void) initTrap {
// 설치 가능한 트랩 종류 확인
// 스테이지 정보 파일에서 읽어 들임
//trapImgList = [TILE_ROAD, TILE_ROCK, TILE_TRAP_ON, TILE_BOX_ON];
}

- (void) printTrapList:(CGPoint)iPoint {
NSLog(@"Trap Setup : %f %f", iPoint.x, iPoint.y);

CCSprite *tSprite = [CCSprite spriteWithFile:@"texture.png" rect:CGRectMake(0, 0, 48, 48)];

tSprite.position = [self convertTileToCocoa:iPoint];
tSprite.scale = 0.75;
tSprite.visible = YES;
[self addChild:tSprite];
// 설치가 가능한 트랩을 화면에 출력

// 터치한 위치에 트랩이 설치가 가능한지 검사
// 이미 트랩이 있는지, 설치가 불가능한 곳인지를....
// 돈이 있는지 등을 검사
// mapInfo[iPoint.x][iPoint.y] = 설치된 타일 타입

// 트랩을 설치

// 이동 경로 재계산 필요 - 트랩이 설치된 경우
[self createMoveTable];

// 표시된 화면 닫음
}

- (void) createTrap:(CGPoint)iPoint {

}

// 탐지한 트랩에 따라 처리
- (void) handlingTrap:(Warrior*)pWarrior {
NSInteger trapType = [self trapFind:pWarrior];
if(trapType == NotFound) return;

if(trapType == TILE_TRAP_OFF) {
// 닫힌 함정일 경우

} else if(trapType == TILE_TRAP_ON) {
// 열린 함정일 경우

} else if(trapType == TILE_BOX_ON) {
// 보물상자일 경우

[self TreasureBox:pWarrior];
}
}

// 근처에 트랩이 있는지 탐지
// 트램의 경우 해당 타일에 위치할 경우 발동이 되므로 수정 필요
- (NSInteger) trapFind:(Warrior*)pWarrior {
CGPoint wPoint = [pWarrior getPosition];
NSInteger wAttack = [pWarrior getAttackRange];

for(int i = 0; i < [trapList count]; i++) {
Trap *tTrap = [trapList objectAtIndex:i];
CGPoint tPoint = [tTrap getPosition];
CGFloat distance = [self lineLength:tPoint point2:wPoint];

if(distance <= powf(wAttack * TILE_SIZE, 1)) {
return [tTrap getTrapNum];
}
}

return NotFound;
}

// 보물 상자일 경우
- (void) TreasureBox:(Warrior*)pWarrior {

}
//////////////////////////////////////////////////////////////////////////
// 트랩 처리 End                                                          //
//////////////////////////////////////////////////////////////////////////